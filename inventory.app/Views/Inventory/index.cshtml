@{
    ViewData["Title"] = "Inventory Page";
}

@model IEnumerable<InventoryViewModel>  
@using inventory.core.Models  

<div class="text-center">
    <h1 class="display-4">Inventory</h1>
    <p><a href="">building a basic Inventory Mangement System with ASP.NET Core</a>.</p>
</div>

<div class="container-fluid">

 <div class="btn-group">  
            <a id="createEditInventoryModal" data-toggle="modal" asp-action="AddInventory" data-target="#modal-action-user" class="btn btn-primary">  
                <i class="glyphicon glyphicon-plus"></i>  Add Inventory  
            </a>  
        </div>
<br/><br/>
  <table class="table">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Product Category</th>
      <th scope="col">Product Name</th>
      <th scope="col">Product Cost</th>
      <th scope="col">Product Price</th>
      <th scope="col">Supplier Name</th>
      <th scope="col">Product Quantity</th>
      <th scope="col">Actions</th>
    </tr>
  </thead>
  <tbody>
       @foreach (var item in Model){
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductCategory)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.PurchaseCost)</td>
                <td>@Html.DisplayFor(modelItem => item.SellingPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.Supplier)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductQuantity)</td>
                <td>  
                    <a id="editInventoryModal" data-toggle="modal" asp-action="EditInventory" asp-route-id="@item.Id" data-target="#modal-action-user"  
                        class="btn btn-info">  
                        <i class="glyphicon glyphicon-pencil"></i>  Edit  
                    </a>                           
                    <a id="deleteInventoryModal" data-toggle="modal" asp-action="DeleteInventory" asp-route-id="@item.Id" data-target="#modal-action-user" class="btn btn-danger">  
                        <i class="glyphicon glyphicon-trash"></i>  Delete  
                    </a>  
                </td>
            </tr>
       }
    
  </tbody>
</table>
</div>

<!-- Modal -->
<div class="modal fade" id="inventoryModal" tabindex="-1" role="dialog" aria-labelledby="inventoryModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="inventoryModalLabel">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

@* @Html.RenderPartialAsync("~/Views/Inventory/_AddInventory.cshtml") *@

@section Scripts  
{  
    <script src="~/js/user-index.js" asp-append-version="true"></script> 
}